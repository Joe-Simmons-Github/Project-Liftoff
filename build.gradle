plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

jar {
	manifest {
		attributes (
				'Main-Class': 'org.launchcode.projectliftoffapplication.java'
		)
	}
}


group = 'org.launchcode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'



repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'


	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.jmockit:jmockit:1.49")
	// https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
	implementation 'javax.persistence:javax.persistence-api:2.2'


}

tasks.named('test') {
	useJUnitPlatform()
} // commented out to test code below

//task stage(dependsOn: ['build', 'clean'])
//build.mustRunAfter clean
//
//task copyToLib(type: Copy) {
//	into "$buildDir/libs"
//	from(configuration.compile)
//} //added code 3/23
//
//stage.dependsOn(copyToLib)
//
//gradle.taskGraph.whenReady {
//	taskGraph ->
//		if (taskGraph.hasTask(stage)) {
//			test.enabled = false
//		}
//} //added code 3/23